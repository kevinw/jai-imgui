D3D11_SHADER_VERSION_TYPE :: enum u32 {
	D3D11_SHVER_PIXEL_SHADER;
	D3D11_SHVER_VERTEX_SHADER;
	D3D11_SHVER_GEOMETRY_SHADER;
	D3D11_SHVER_HULL_SHADER;
	D3D11_SHVER_DOMAIN_SHADER;
	D3D11_SHVER_COMPUTE_SHADER;
}

D3D11_SIGNATURE_PARAMETER_DESC :: struct {
    SemanticName: LPCSTR;
    SemanticIndex: u32;
    Register: u32;
    SystemValueType: D3D11_NAME;
    ComponentType: D3D11_REGISTER_COMPONENT_TYPE;
    Mask: u8;
    ReadWriteMask: u8;
    Stream: u32;
    MinPrecision: D3D_MIN_PRECISION;
}

D3D_MIN_PRECISION :: enum u32 {
    DEFAULT;
    FLOAT_16;
    FLOAT_2_8;
    RESERVED;
    SINT_16;
    UINT_16;
    ANY_16;
    ANY_1;
}

D3D11_SHADER_BUFFER_DESC :: struct {
    Name: LPCSTR;
    Type: D3D_CBUFFER_TYPE;
    Variables: u32;
    Size: u32;
    uFlags: u32;
}

D3D11_SHADER_VARIABLE_DESC :: struct {
    Name: LPCSTR;
    StartOffset: u32;
    Size: u32;
    uFlags: u32;
    DefaultValue: *void;
    StartTexture: u32;
    TextureSize: u32;
    StartSampler: u32;
    SamplerSize: u32;
}

D3D11_SHADER_TYPE_DESC :: struct {
    Class: D3D_SHADER_VARIABLE_CLASS;
    Type: D3D_SHADER_VARIABLE_TYPE;
    Rows: u32;
    Columns: u32;
    Elements: u32;
    Members: u32;
    Offset: u32;
    Name: LPCSTR;
}

D3D11_SHADER_DESC :: struct {
    Version: u32;
    Creator: LPCSTR;
    Flags: u32;
    ConstantBuffers: u32;
    BoundResources: u32;
    InputParameters: u32;
    OutputParameters: u32;
    InstructionCount: u32;
    TempRegisterCount: u32;
    TempArrayCount: u32;
    DefCount: u32;
    DclCount: u32;
    TextureNormalInstructions: u32;
    TextureLoadInstructions: u32;
    TextureCompInstructions: u32;
    TextureBiasInstructions: u32;
    TextureGradientInstructions: u32;
    FloatInstructionCount: u32;
    IntInstructionCount: u32;
    UintInstructionCount: u32;
    StaticFlowControlCount: u32;
    DynamicFlowControlCount: u32;
    MacroInstructionCount: u32;
    ArrayInstructionCount: u32;
    CutInstructionCount: u32;
    EmitInstructionCount: u32;
    GSOutputTopology: D3D_PRIMITIVE_TOPOLOGY;
    GSMaxOutputVertexCount: u32;
    InputPrimitive: D3D_PRIMITIVE;
    PatchConstantParameters: u32;
    cGSInstanceCount: u32;
    cControlPoints: u32;
    HSOutputPrimitive: D3D_TESSELLATOR_OUTPUT_PRIMITIVE;
    HSPartitioning: D3D_TESSELLATOR_PARTITIONING;
    TessellatorDomain: D3D11_TESSELLATOR_DOMAIN;
    cBarrierInstructions: u32;
    cInterlockedInstructions: u32;
    cTextureStoreInstructions: u32;
}

D3D_REGISTER_COMPONENT_TYPE :: enum u32 {
    D3D_REGISTER_COMPONENT_UNKNOWN	:: 0;
    D3D_REGISTER_COMPONENT_UINT32	:: 1;
    D3D_REGISTER_COMPONENT_SINT32	:: 2;
    D3D_REGISTER_COMPONENT_FLOAT32	:: 3;
    D3D10_REGISTER_COMPONENT_UNKNOWN	:: D3D_REGISTER_COMPONENT_UNKNOWN;
    D3D10_REGISTER_COMPONENT_UINT32	:: D3D_REGISTER_COMPONENT_UINT32;
    D3D10_REGISTER_COMPONENT_SINT32	:: D3D_REGISTER_COMPONENT_SINT32;
    D3D10_REGISTER_COMPONENT_FLOAT32	:: D3D_REGISTER_COMPONENT_FLOAT32;
}

D3D_NAME :: enum u32 {
    D3D_NAME_UNDEFINED	:: 0;
    D3D_NAME_POSITION	:: 1;
    D3D_NAME_CLIP_DISTANCE	:: 2;
    D3D_NAME_CULL_DISTANCE	:: 3;
    D3D_NAME_RENDER_TARGET_ARRAY_INDEX	:: 4;
    D3D_NAME_VIEWPORT_ARRAY_INDEX	:: 5;
    D3D_NAME_VERTEX_ID	:: 6;
    D3D_NAME_PRIMITIVE_ID	:: 7;
    D3D_NAME_INSTANCE_ID	:: 8;
    D3D_NAME_IS_FRONT_FACE	:: 9;
    D3D_NAME_SAMPLE_INDEX	:: 10;
    D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR	:: 11;
    D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR	:: 12;
    D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR	:: 13;
    D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR	:: 14;
    D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR	:: 15;
    D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR	:: 16;
    D3D_NAME_BARYCENTRICS	:: 23;
    D3D_NAME_SHADINGRATE	:: 24;
    D3D_NAME_TARGET	:: 64;
    D3D_NAME_DEPTH	:: 65;
    D3D_NAME_COVERAGE	:: 66;
    D3D_NAME_DEPTH_GREATER_EQUAL	:: 67;
    D3D_NAME_DEPTH_LESS_EQUAL	:: 68;
    D3D_NAME_STENCIL_REF	:: 69;
    D3D_NAME_INNER_COVERAGE	:: 70;
    D3D10_NAME_UNDEFINED	:: D3D_NAME_UNDEFINED;
    D3D10_NAME_POSITION	:: D3D_NAME_POSITION;
    D3D10_NAME_CLIP_DISTANCE	:: D3D_NAME_CLIP_DISTANCE;
    D3D10_NAME_CULL_DISTANCE	:: D3D_NAME_CULL_DISTANCE;
    D3D10_NAME_RENDER_TARGET_ARRAY_INDEX	:: D3D_NAME_RENDER_TARGET_ARRAY_INDEX;
    D3D10_NAME_VIEWPORT_ARRAY_INDEX	:: D3D_NAME_VIEWPORT_ARRAY_INDEX;
    D3D10_NAME_VERTEX_ID	:: D3D_NAME_VERTEX_ID;
    D3D10_NAME_PRIMITIVE_ID	:: D3D_NAME_PRIMITIVE_ID;
    D3D10_NAME_INSTANCE_ID	:: D3D_NAME_INSTANCE_ID;
    D3D10_NAME_IS_FRONT_FACE	:: D3D_NAME_IS_FRONT_FACE;
    D3D10_NAME_SAMPLE_INDEX	:: D3D_NAME_SAMPLE_INDEX;
    D3D10_NAME_TARGET	:: D3D_NAME_TARGET;
    D3D10_NAME_DEPTH	:: D3D_NAME_DEPTH;
    D3D10_NAME_COVERAGE	:: D3D_NAME_COVERAGE;
    D3D11_NAME_FINAL_QUAD_EDGE_TESSFACTOR	:: D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR;
    D3D11_NAME_FINAL_QUAD_INSIDE_TESSFACTOR	:: D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR;
    D3D11_NAME_FINAL_TRI_EDGE_TESSFACTOR	:: D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR;
    D3D11_NAME_FINAL_TRI_INSIDE_TESSFACTOR	:: D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR;
    D3D11_NAME_FINAL_LINE_DETAIL_TESSFACTOR	:: D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR;
    D3D11_NAME_FINAL_LINE_DENSITY_TESSFACTOR	:: D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR;
    D3D11_NAME_DEPTH_GREATER_EQUAL	:: D3D_NAME_DEPTH_GREATER_EQUAL;
    D3D11_NAME_DEPTH_LESS_EQUAL	:: D3D_NAME_DEPTH_LESS_EQUAL;
    D3D11_NAME_STENCIL_REF	:: D3D_NAME_STENCIL_REF;
    D3D11_NAME_INNER_COVERAGE	:: D3D_NAME_INNER_COVERAGE;
    D3D12_NAME_BARYCENTRICS	:: D3D_NAME_BARYCENTRICS;
    D3D12_NAME_SHADINGRATE	:: D3D_NAME_SHADINGRATE;
}

D3D_TESSELLATOR_DOMAIN :: struct {
    D3D_TESSELLATOR_DOMAIN_UNDEFINED	:: 0;
    D3D_TESSELLATOR_DOMAIN_ISOLINE	:: 1;
    D3D_TESSELLATOR_DOMAIN_TRI	:: 2;
    D3D_TESSELLATOR_DOMAIN_QUAD	:: 3;
    D3D11_TESSELLATOR_DOMAIN_UNDEFINED	:: D3D_TESSELLATOR_DOMAIN_UNDEFINED;
    D3D11_TESSELLATOR_DOMAIN_ISOLINE	:: D3D_TESSELLATOR_DOMAIN_ISOLINE;
    D3D11_TESSELLATOR_DOMAIN_TRI	:: D3D_TESSELLATOR_DOMAIN_TRI;
    D3D11_TESSELLATOR_DOMAIN_QUAD	:: D3D_TESSELLATOR_DOMAIN_QUAD;
}

D3D_TESSELLATOR_PARTITIONING :: enum u32 {
    D3D_TESSELLATOR_PARTITIONING_UNDEFINED	:: 0;
    D3D_TESSELLATOR_PARTITIONING_INTEGER	:: 1;
    D3D_TESSELLATOR_PARTITIONING_POW2	:: 2;
    D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD	:: 3;
    D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN	:: 4;
    D3D11_TESSELLATOR_PARTITIONING_UNDEFINED	:: D3D_TESSELLATOR_PARTITIONING_UNDEFINED;
    D3D11_TESSELLATOR_PARTITIONING_INTEGER	:: D3D_TESSELLATOR_PARTITIONING_INTEGER;
    D3D11_TESSELLATOR_PARTITIONING_POW2	:: D3D_TESSELLATOR_PARTITIONING_POW2;
    D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD	:: D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD;
    D3D11_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN	:: D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN;
}

D3D_TESSELLATOR_OUTPUT_PRIMITIVE :: enum u32 {
    D3D_TESSELLATOR_OUTPUT_UNDEFINED	:: 0;
    D3D_TESSELLATOR_OUTPUT_POINT	:: 1;
    D3D_TESSELLATOR_OUTPUT_LINE	:: 2;
    D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW	:: 3;
    D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW	:: 4;
    D3D11_TESSELLATOR_OUTPUT_UNDEFINED	:: D3D_TESSELLATOR_OUTPUT_UNDEFINED;
    D3D11_TESSELLATOR_OUTPUT_POINT	:: D3D_TESSELLATOR_OUTPUT_POINT;
    D3D11_TESSELLATOR_OUTPUT_LINE	:: D3D_TESSELLATOR_OUTPUT_LINE;
    D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CW	:: D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW;
    D3D11_TESSELLATOR_OUTPUT_TRIANGLE_CCW	:: D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW;
}

D3D_SHADER_INPUT_TYPE :: enum u32 {
    D3D_SIT_CBUFFER	:: 0;
    D3D_SIT_TBUFFER	:: ( xx D3D_SIT_CBUFFER + 1 ) ;
    D3D_SIT_TEXTURE	:: ( xx D3D_SIT_TBUFFER + 1 ) ;
    D3D_SIT_SAMPLER	:: ( xx D3D_SIT_TEXTURE + 1 ) ;
    D3D_SIT_UAV_RWTYPED	:: ( xx D3D_SIT_SAMPLER + 1 ) ;
    D3D_SIT_STRUCTURED	:: ( xx D3D_SIT_UAV_RWTYPED + 1 ) ;
    D3D_SIT_UAV_RWSTRUCTURED	:: ( xx D3D_SIT_STRUCTURED + 1 ) ;
    D3D_SIT_BYTEADDRESS	:: ( xx D3D_SIT_UAV_RWSTRUCTURED + 1 ) ;
    D3D_SIT_UAV_RWBYTEADDRESS	:: ( xx D3D_SIT_BYTEADDRESS + 1 ) ;
    D3D_SIT_UAV_APPEND_STRUCTURED	:: ( xx D3D_SIT_UAV_RWBYTEADDRESS + 1 ) ;
    D3D_SIT_UAV_CONSUME_STRUCTURED	:: ( xx D3D_SIT_UAV_APPEND_STRUCTURED + 1 ) ;
    D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER	:: ( xx D3D_SIT_UAV_CONSUME_STRUCTURED + 1 ) ;
    D3D10_SIT_CBUFFER	:: D3D_SIT_CBUFFER;
    D3D10_SIT_TBUFFER	:: D3D_SIT_TBUFFER;
    D3D10_SIT_TEXTURE	:: D3D_SIT_TEXTURE;
    D3D10_SIT_SAMPLER	:: D3D_SIT_SAMPLER;
    D3D11_SIT_UAV_RWTYPED	:: D3D_SIT_UAV_RWTYPED;
    D3D11_SIT_STRUCTURED	:: D3D_SIT_STRUCTURED;
    D3D11_SIT_UAV_RWSTRUCTURED	:: D3D_SIT_UAV_RWSTRUCTURED;
    D3D11_SIT_BYTEADDRESS	:: D3D_SIT_BYTEADDRESS;
    D3D11_SIT_UAV_RWBYTEADDRESS	:: D3D_SIT_UAV_RWBYTEADDRESS;
    D3D11_SIT_UAV_APPEND_STRUCTURED	:: D3D_SIT_UAV_APPEND_STRUCTURED;
    D3D11_SIT_UAV_CONSUME_STRUCTURED	:: D3D_SIT_UAV_CONSUME_STRUCTURED;
    D3D11_SIT_UAV_RWSTRUCTURED_WITH_COUNTER	:: D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER;
}

D3D_SHADER_CBUFFER_FLAGS :: enum u32 {
    D3D_CBF_USERPACKED	:: 1;
    D3D10_CBF_USERPACKED	:: D3D_CBF_USERPACKED;
    D3D_CBF_FORCE_DWORD	:: 0x7fffffff;
}

D3D_CBUFFER_TYPE :: enum u32 {
    D3D_CT_CBUFFER	:: 0;
    D3D_CT_TBUFFER	:: ( xx D3D_CT_CBUFFER + 1 ) ;
    D3D_CT_INTERFACE_POINTERS	:: ( xx D3D_CT_TBUFFER + 1 ) ;
    D3D_CT_RESOURCE_BIND_INFO	:: ( xx D3D_CT_INTERFACE_POINTERS + 1 ) ;
    D3D10_CT_CBUFFER	:: D3D_CT_CBUFFER;
    D3D10_CT_TBUFFER	:: D3D_CT_TBUFFER;
    D3D11_CT_CBUFFER	:: D3D_CT_CBUFFER;
    D3D11_CT_TBUFFER	:: D3D_CT_TBUFFER;
    D3D11_CT_INTERFACE_POINTERS	:: D3D_CT_INTERFACE_POINTERS;
    D3D11_CT_RESOURCE_BIND_INFO	:: D3D_CT_RESOURCE_BIND_INFO;
}

D3D_PRIMITIVE :: enum u32 {
    D3D_PRIMITIVE_UNDEFINED	:: 0;
    D3D_PRIMITIVE_POINT	:: 1;
    D3D_PRIMITIVE_LINE	:: 2;
    D3D_PRIMITIVE_TRIANGLE	:: 3;
    D3D_PRIMITIVE_LINE_ADJ	:: 6;
    D3D_PRIMITIVE_TRIANGLE_ADJ	:: 7;
    D3D_PRIMITIVE_1_CONTROL_POINT_PATCH	:: 8;
    D3D_PRIMITIVE_2_CONTROL_POINT_PATCH	:: 9;
    D3D_PRIMITIVE_3_CONTROL_POINT_PATCH	:: 10;
    D3D_PRIMITIVE_4_CONTROL_POINT_PATCH	:: 11;
    D3D_PRIMITIVE_5_CONTROL_POINT_PATCH	:: 12;
    D3D_PRIMITIVE_6_CONTROL_POINT_PATCH	:: 13;
    D3D_PRIMITIVE_7_CONTROL_POINT_PATCH	:: 14;
    D3D_PRIMITIVE_8_CONTROL_POINT_PATCH	:: 15;
    D3D_PRIMITIVE_9_CONTROL_POINT_PATCH	:: 16;
    D3D_PRIMITIVE_10_CONTROL_POINT_PATCH	:: 17;
    D3D_PRIMITIVE_11_CONTROL_POINT_PATCH	:: 18;
    D3D_PRIMITIVE_12_CONTROL_POINT_PATCH	:: 19;
    D3D_PRIMITIVE_13_CONTROL_POINT_PATCH	:: 20;
    D3D_PRIMITIVE_14_CONTROL_POINT_PATCH	:: 21;
    D3D_PRIMITIVE_15_CONTROL_POINT_PATCH	:: 22;
    D3D_PRIMITIVE_16_CONTROL_POINT_PATCH	:: 23;
    D3D_PRIMITIVE_17_CONTROL_POINT_PATCH	:: 24;
    D3D_PRIMITIVE_18_CONTROL_POINT_PATCH	:: 25;
    D3D_PRIMITIVE_19_CONTROL_POINT_PATCH	:: 26;
    D3D_PRIMITIVE_20_CONTROL_POINT_PATCH	:: 27;
    D3D_PRIMITIVE_21_CONTROL_POINT_PATCH	:: 28;
    D3D_PRIMITIVE_22_CONTROL_POINT_PATCH	:: 29;
    D3D_PRIMITIVE_23_CONTROL_POINT_PATCH	:: 30;
    D3D_PRIMITIVE_24_CONTROL_POINT_PATCH	:: 31;
    D3D_PRIMITIVE_25_CONTROL_POINT_PATCH	:: 32;
    D3D_PRIMITIVE_26_CONTROL_POINT_PATCH	:: 33;
    D3D_PRIMITIVE_27_CONTROL_POINT_PATCH	:: 34;
    D3D_PRIMITIVE_28_CONTROL_POINT_PATCH	:: 35;
    D3D_PRIMITIVE_29_CONTROL_POINT_PATCH	:: 36;
    D3D_PRIMITIVE_30_CONTROL_POINT_PATCH	:: 37;
    D3D_PRIMITIVE_31_CONTROL_POINT_PATCH	:: 38;
    D3D_PRIMITIVE_32_CONTROL_POINT_PATCH	:: 39;
    D3D10_PRIMITIVE_UNDEFINED	:: D3D_PRIMITIVE_UNDEFINED;
    D3D10_PRIMITIVE_POINT	:: D3D_PRIMITIVE_POINT;
    D3D10_PRIMITIVE_LINE	:: D3D_PRIMITIVE_LINE;
    D3D10_PRIMITIVE_TRIANGLE	:: D3D_PRIMITIVE_TRIANGLE;
    D3D10_PRIMITIVE_LINE_ADJ	:: D3D_PRIMITIVE_LINE_ADJ;
    D3D10_PRIMITIVE_TRIANGLE_ADJ	:: D3D_PRIMITIVE_TRIANGLE_ADJ;
    D3D11_PRIMITIVE_UNDEFINED	:: D3D_PRIMITIVE_UNDEFINED;
    D3D11_PRIMITIVE_POINT	:: D3D_PRIMITIVE_POINT;
    D3D11_PRIMITIVE_LINE	:: D3D_PRIMITIVE_LINE;
    D3D11_PRIMITIVE_TRIANGLE	:: D3D_PRIMITIVE_TRIANGLE;
    D3D11_PRIMITIVE_LINE_ADJ	:: D3D_PRIMITIVE_LINE_ADJ;
    D3D11_PRIMITIVE_TRIANGLE_ADJ	:: D3D_PRIMITIVE_TRIANGLE_ADJ;
    D3D11_PRIMITIVE_1_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_1_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_2_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_2_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_3_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_3_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_4_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_4_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_5_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_5_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_6_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_6_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_7_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_7_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_8_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_8_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_9_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_9_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_10_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_10_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_11_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_11_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_12_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_12_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_13_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_13_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_14_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_14_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_15_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_15_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_16_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_16_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_17_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_17_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_18_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_18_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_19_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_19_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_20_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_20_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_21_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_21_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_22_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_22_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_23_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_23_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_24_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_24_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_25_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_25_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_26_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_26_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_27_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_27_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_28_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_28_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_29_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_29_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_30_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_30_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_31_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_31_CONTROL_POINT_PATCH;
    D3D11_PRIMITIVE_32_CONTROL_POINT_PATCH	:: D3D_PRIMITIVE_32_CONTROL_POINT_PATCH;
}

D3D_SHADER_VARIABLE_CLASS :: enum u32 {
    D3D_SVC_SCALAR	:: 0;
    D3D_SVC_VECTOR	:: ( xx D3D_SVC_SCALAR + 1 ) ;
    D3D_SVC_MATRIX_ROWS	:: ( xx D3D_SVC_VECTOR + 1 ) ;
    D3D_SVC_MATRIX_COLUMNS	:: ( xx D3D_SVC_MATRIX_ROWS + 1 ) ;
    D3D_SVC_OBJECT	:: ( xx D3D_SVC_MATRIX_COLUMNS + 1 ) ;
    D3D_SVC_STRUCT	:: ( xx D3D_SVC_OBJECT + 1 ) ;
    D3D_SVC_INTERFACE_CLASS	:: ( xx D3D_SVC_STRUCT + 1 ) ;
    D3D_SVC_INTERFACE_POINTER	:: ( xx D3D_SVC_INTERFACE_CLASS + 1 ) ;
    D3D10_SVC_SCALAR	:: D3D_SVC_SCALAR;
    D3D10_SVC_VECTOR	:: D3D_SVC_VECTOR;
    D3D10_SVC_MATRIX_ROWS	:: D3D_SVC_MATRIX_ROWS;
    D3D10_SVC_MATRIX_COLUMNS	:: D3D_SVC_MATRIX_COLUMNS;
    D3D10_SVC_OBJECT	:: D3D_SVC_OBJECT;
    D3D10_SVC_STRUCT	:: D3D_SVC_STRUCT;
    D3D11_SVC_INTERFACE_CLASS	:: D3D_SVC_INTERFACE_CLASS;
    D3D11_SVC_INTERFACE_POINTER	:: D3D_SVC_INTERFACE_POINTER;
    D3D_SVC_FORCE_DWORD	:: 0x7fffffff;
}

D3D_SHADER_VARIABLE_TYPE :: enum u32 {
    D3D_SVT_VOID	:: 0;
    D3D_SVT_BOOL	:: 1;
    D3D_SVT_INT	:: 2;
    D3D_SVT_FLOAT	:: 3;
    D3D_SVT_STRING	:: 4;
    D3D_SVT_TEXTURE	:: 5;
    D3D_SVT_TEXTURE1D	:: 6;
    D3D_SVT_TEXTURE2D	:: 7;
    D3D_SVT_TEXTURE3D	:: 8;
    D3D_SVT_TEXTURECUBE	:: 9;
    D3D_SVT_SAMPLER	:: 10;
    D3D_SVT_SAMPLER1D	:: 11;
    D3D_SVT_SAMPLER2D	:: 12;
    D3D_SVT_SAMPLER3D	:: 13;
    D3D_SVT_SAMPLERCUBE	:: 14;
    D3D_SVT_PIXELSHADER	:: 15;
    D3D_SVT_VERTEXSHADER	:: 16;
    D3D_SVT_PIXELFRAGMENT	:: 17;
    D3D_SVT_VERTEXFRAGMENT	:: 18;
    D3D_SVT_UINT	:: 19;
    D3D_SVT_UINT8	:: 20;
    D3D_SVT_GEOMETRYSHADER	:: 21;
    D3D_SVT_RASTERIZER	:: 22;
    D3D_SVT_DEPTHSTENCIL	:: 23;
    D3D_SVT_BLEND	:: 24;
    D3D_SVT_BUFFER	:: 25;
    D3D_SVT_CBUFFER	:: 26;
    D3D_SVT_TBUFFER	:: 27;
    D3D_SVT_TEXTURE1DARRAY	:: 28;
    D3D_SVT_TEXTURE2DARRAY	:: 29;
    D3D_SVT_RENDERTARGETVIEW	:: 30;
    D3D_SVT_DEPTHSTENCILVIEW	:: 31;
    D3D_SVT_TEXTURE2DMS	:: 32;
    D3D_SVT_TEXTURE2DMSARRAY	:: 33;
    D3D_SVT_TEXTURECUBEARRAY	:: 34;
    D3D_SVT_HULLSHADER	:: 35;
    D3D_SVT_DOMAINSHADER	:: 36;
    D3D_SVT_INTERFACE_POINTER	:: 37;
    D3D_SVT_COMPUTESHADER	:: 38;
    D3D_SVT_DOUBLE	:: 39;
    D3D_SVT_RWTEXTURE1D	:: 40;
    D3D_SVT_RWTEXTURE1DARRAY	:: 41;
    D3D_SVT_RWTEXTURE2D	:: 42;
    D3D_SVT_RWTEXTURE2DARRAY	:: 43;
    D3D_SVT_RWTEXTURE3D	:: 44;
    D3D_SVT_RWBUFFER	:: 45;
    D3D_SVT_BYTEADDRESS_BUFFER	:: 46;
    D3D_SVT_RWBYTEADDRESS_BUFFER	:: 47;
    D3D_SVT_STRUCTURED_BUFFER	:: 48;
    D3D_SVT_RWSTRUCTURED_BUFFER	:: 49;
    D3D_SVT_APPEND_STRUCTURED_BUFFER	:: 50;
    D3D_SVT_CONSUME_STRUCTURED_BUFFER	:: 51;
    D3D_SVT_MIN8FLOAT	:: 52;
    D3D_SVT_MIN10FLOAT	:: 53;
    D3D_SVT_MIN16FLOAT	:: 54;
    D3D_SVT_MIN12INT	:: 55;
    D3D_SVT_MIN16INT	:: 56;
    D3D_SVT_MIN16UINT	:: 57;
    D3D10_SVT_VOID	:: D3D_SVT_VOID;
    D3D10_SVT_BOOL	:: D3D_SVT_BOOL;
    D3D10_SVT_INT	:: D3D_SVT_INT;
    D3D10_SVT_FLOAT	:: D3D_SVT_FLOAT;
    D3D10_SVT_STRING	:: D3D_SVT_STRING;
    D3D10_SVT_TEXTURE	:: D3D_SVT_TEXTURE;
    D3D10_SVT_TEXTURE1D	:: D3D_SVT_TEXTURE1D;
    D3D10_SVT_TEXTURE2D	:: D3D_SVT_TEXTURE2D;
    D3D10_SVT_TEXTURE3D	:: D3D_SVT_TEXTURE3D;
    D3D10_SVT_TEXTURECUBE	:: D3D_SVT_TEXTURECUBE;
    D3D10_SVT_SAMPLER	:: D3D_SVT_SAMPLER;
    D3D10_SVT_SAMPLER1D	:: D3D_SVT_SAMPLER1D;
    D3D10_SVT_SAMPLER2D	:: D3D_SVT_SAMPLER2D;
    D3D10_SVT_SAMPLER3D	:: D3D_SVT_SAMPLER3D;
    D3D10_SVT_SAMPLERCUBE	:: D3D_SVT_SAMPLERCUBE;
    D3D10_SVT_PIXELSHADER	:: D3D_SVT_PIXELSHADER;
    D3D10_SVT_VERTEXSHADER	:: D3D_SVT_VERTEXSHADER;
    D3D10_SVT_PIXELFRAGMENT	:: D3D_SVT_PIXELFRAGMENT;
    D3D10_SVT_VERTEXFRAGMENT	:: D3D_SVT_VERTEXFRAGMENT;
    D3D10_SVT_UINT	:: D3D_SVT_UINT;
    D3D10_SVT_UINT8	:: D3D_SVT_UINT8;
    D3D10_SVT_GEOMETRYSHADER	:: D3D_SVT_GEOMETRYSHADER;
    D3D10_SVT_RASTERIZER	:: D3D_SVT_RASTERIZER;
    D3D10_SVT_DEPTHSTENCIL	:: D3D_SVT_DEPTHSTENCIL;
    D3D10_SVT_BLEND	:: D3D_SVT_BLEND;
    D3D10_SVT_BUFFER	:: D3D_SVT_BUFFER;
    D3D10_SVT_CBUFFER	:: D3D_SVT_CBUFFER;
    D3D10_SVT_TBUFFER	:: D3D_SVT_TBUFFER;
    D3D10_SVT_TEXTURE1DARRAY	:: D3D_SVT_TEXTURE1DARRAY;
    D3D10_SVT_TEXTURE2DARRAY	:: D3D_SVT_TEXTURE2DARRAY;
    D3D10_SVT_RENDERTARGETVIEW	:: D3D_SVT_RENDERTARGETVIEW;
    D3D10_SVT_DEPTHSTENCILVIEW	:: D3D_SVT_DEPTHSTENCILVIEW;
    D3D10_SVT_TEXTURE2DMS	:: D3D_SVT_TEXTURE2DMS;
    D3D10_SVT_TEXTURE2DMSARRAY	:: D3D_SVT_TEXTURE2DMSARRAY;
    D3D10_SVT_TEXTURECUBEARRAY	:: D3D_SVT_TEXTURECUBEARRAY;
    D3D11_SVT_HULLSHADER	:: D3D_SVT_HULLSHADER;
    D3D11_SVT_DOMAINSHADER	:: D3D_SVT_DOMAINSHADER;
    D3D11_SVT_INTERFACE_POINTER	:: D3D_SVT_INTERFACE_POINTER;
    D3D11_SVT_COMPUTESHADER	:: D3D_SVT_COMPUTESHADER;
    D3D11_SVT_DOUBLE	:: D3D_SVT_DOUBLE;
    D3D11_SVT_RWTEXTURE1D	:: D3D_SVT_RWTEXTURE1D;
    D3D11_SVT_RWTEXTURE1DARRAY	:: D3D_SVT_RWTEXTURE1DARRAY;
    D3D11_SVT_RWTEXTURE2D	:: D3D_SVT_RWTEXTURE2D;
    D3D11_SVT_RWTEXTURE2DARRAY	:: D3D_SVT_RWTEXTURE2DARRAY;
    D3D11_SVT_RWTEXTURE3D	:: D3D_SVT_RWTEXTURE3D;
    D3D11_SVT_RWBUFFER	:: D3D_SVT_RWBUFFER;
    D3D11_SVT_BYTEADDRESS_BUFFER	:: D3D_SVT_BYTEADDRESS_BUFFER;
    D3D11_SVT_RWBYTEADDRESS_BUFFER	:: D3D_SVT_RWBYTEADDRESS_BUFFER;
    D3D11_SVT_STRUCTURED_BUFFER	:: D3D_SVT_STRUCTURED_BUFFER;
    D3D11_SVT_RWSTRUCTURED_BUFFER	:: D3D_SVT_RWSTRUCTURED_BUFFER;
    D3D11_SVT_APPEND_STRUCTURED_BUFFER	:: D3D_SVT_APPEND_STRUCTURED_BUFFER;
    D3D11_SVT_CONSUME_STRUCTURED_BUFFER	:: D3D_SVT_CONSUME_STRUCTURED_BUFFER;
    D3D_SVT_FORCE_DWORD	:: 0x7fffffff;
}

D3D_RESOURCE_RETURN_TYPE :: enum u32 {
    D3D_RETURN_TYPE_UNORM	:: 1;
    D3D_RETURN_TYPE_SNORM	:: 2;
    D3D_RETURN_TYPE_SINT	:: 3;
    D3D_RETURN_TYPE_UINT	:: 4;
    D3D_RETURN_TYPE_FLOAT	:: 5;
    D3D_RETURN_TYPE_MIXED	:: 6;
    D3D_RETURN_TYPE_DOUBLE	:: 7;
    D3D_RETURN_TYPE_CONTINUED	:: 8;
    D3D10_RETURN_TYPE_UNORM	:: D3D_RETURN_TYPE_UNORM;
    D3D10_RETURN_TYPE_SNORM	:: D3D_RETURN_TYPE_SNORM;
    D3D10_RETURN_TYPE_SINT	:: D3D_RETURN_TYPE_SINT;
    D3D10_RETURN_TYPE_UINT	:: D3D_RETURN_TYPE_UINT;
    D3D10_RETURN_TYPE_FLOAT	:: D3D_RETURN_TYPE_FLOAT;
    D3D10_RETURN_TYPE_MIXED	:: D3D_RETURN_TYPE_MIXED;
    D3D11_RETURN_TYPE_UNORM	:: D3D_RETURN_TYPE_UNORM;
    D3D11_RETURN_TYPE_SNORM	:: D3D_RETURN_TYPE_SNORM;
    D3D11_RETURN_TYPE_SINT	:: D3D_RETURN_TYPE_SINT;
    D3D11_RETURN_TYPE_UINT	:: D3D_RETURN_TYPE_UINT;
    D3D11_RETURN_TYPE_FLOAT	:: D3D_RETURN_TYPE_FLOAT;
    D3D11_RETURN_TYPE_MIXED	:: D3D_RETURN_TYPE_MIXED;
    D3D11_RETURN_TYPE_DOUBLE	:: D3D_RETURN_TYPE_DOUBLE;
    D3D11_RETURN_TYPE_CONTINUED	:: D3D_RETURN_TYPE_CONTINUED;
}

D3D11_TESSELLATOR_DOMAIN :: D3D_TESSELLATOR_DOMAIN;
D3D11_REGISTER_COMPONENT_TYPE :: D3D_REGISTER_COMPONENT_TYPE;
D3D11_NAME :: D3D_NAME;
D3D11_PRIMITIVE :: D3D_PRIMITIVE;
D3D11_RESOURCE_RETURN_TYPE :: D3D_RESOURCE_RETURN_TYPE;

D3D11_SHADER_INPUT_BIND_DESC :: struct {
    Name: LPCSTR;
    Type: D3D_SHADER_INPUT_TYPE;
    BindPoint: u32;
    BindCount: u32;
    uFlags: u32;
    ReturnType: D3D11_RESOURCE_RETURN_TYPE;
    Dimension: D3D11_SRV_DIMENSION;
    NumSamples: u32;
}

ID3D11ShaderReflectionType :: struct {
    uuid :: "6e6ffa6a-9bae-4613-a51e-91652d508c21";
    using vtable: *ID3D11ShaderReflectionType_VTable;
}

ID3D11ShaderReflectionType_VTable :: struct {
    GetDesc: (this: *ID3D11ShaderReflectionType, pDesc: *D3D11_SHADER_TYPE_DESC) -> HRESULT #foreign;
    GetMemberTypeByIndex: (this: *ID3D11ShaderReflectionType, Index: u32) -> *ID3D11ShaderReflectionType #foreign;
    GetMemberTypeByName: (this: *ID3D11ShaderReflectionType, Name: LPCSTR) -> *ID3D11ShaderReflectionType #foreign;
    GetMemberTypeName: (this: *ID3D11ShaderReflectionType, Index: u32) -> LPCSTR #foreign;
    IsEqual: (this: *ID3D11ShaderReflectionType, pType: *ID3D11ShaderReflectionType) -> HRESULT #foreign;
    GetSubType: (this: *ID3D11ShaderReflectionType) -> *ID3D11ShaderReflectionType #foreign;
    GetBaseClass: (this: *ID3D11ShaderReflectionType) -> *ID3D11ShaderReflectionType #foreign;
    GetNumInterfaces: (this: *ID3D11ShaderReflectionType) -> u32 #foreign;
    GetInterfaceByIndex: (this: *ID3D11ShaderReflectionType, uIndex: u32) -> *ID3D11ShaderReflectionType #foreign;
    IsOfType: (this: *ID3D11ShaderReflectionType, pType: *ID3D11ShaderReflectionType) -> HRESULT #foreign;
    ImplementsInterface: (this: *ID3D11ShaderReflectionType, pBase: *ID3D11ShaderReflectionType) -> HRESULT #foreign;
}

ID3D11ShaderReflectionVariable :: struct {
    uuid :: "51f23923-f3e5-4bd1-91cb-606177d8db4c";
    using vtable: *ID3D11ShaderReflectionVariable_VTable;
}

ID3D11ShaderReflectionVariable_VTable :: struct {
    GetDesc: (this: *ID3D11ShaderReflectionVariable, pDesc: *D3D11_SHADER_VARIABLE_DESC) -> HRESULT #foreign;
    GetType: (this: *ID3D11ShaderReflectionVariable) -> *ID3D11ShaderReflectionType #foreign;
    GetBuffer: (this: *ID3D11ShaderReflectionVariable) -> *ID3D11ShaderReflectionConstantBuffer #foreign;
    GetInterfaceSlot: (this: *ID3D11ShaderReflectionVariable, uArrayIndex: u32) -> u32 #foreign;
}

ID3D11ShaderReflectionConstantBuffer :: struct {
    uuid :: "eb62d63d-93dd-4318-8ae8-c6f83ad371b8";
    using vtable: *ID3D11ShaderReflectionConstantBuffer_VTable;
}

ID3D11ShaderReflectionConstantBuffer_VTable :: struct {
    GetDesc: (this: *ID3D11ShaderReflectionConstantBuffer, pDesc: *D3D11_SHADER_BUFFER_DESC) -> HRESULT #foreign;
    GetVariableByIndex: (this: *ID3D11ShaderReflectionConstantBuffer, Index: u32) -> *ID3D11ShaderReflectionVariable #foreign;
    GetVariableByName: (this: *ID3D11ShaderReflectionConstantBuffer, Name: LPCSTR) -> *ID3D11ShaderReflectionVariable #foreign;
}

ID3D11ShaderReflection :: struct {
    uuid :: "8d536ca1-0cca-4956-a837-786963755584";
    using vtable: *ID3D11ShaderReflection_VTable;
}

ID3D11ShaderReflection_VTable :: struct {
    using unknown: IUnknown_VTable;

    GetDesc: (this: *ID3D11ShaderReflection, pDesc: *D3D11_SHADER_DESC) -> HRESULT #foreign;
    GetConstantBufferByIndex: (this: *ID3D11ShaderReflection, Index: u32) -> *ID3D11ShaderReflectionConstantBuffer #foreign;
    GetConstantBufferByName: (this: *ID3D11ShaderReflection, Name: LPCSTR) -> *ID3D11ShaderReflectionConstantBuffer #foreign;
    GetResourceBindingDesc: (this: *ID3D11ShaderReflection, ResourceIndex: u32, pDesc: *D3D11_SHADER_INPUT_BIND_DESC) -> HRESULT #foreign;
    GetInputParameterDesc: (this: *ID3D11ShaderReflection, ParameterIndex: u32, pDesc: *D3D11_SIGNATURE_PARAMETER_DESC) -> HRESULT #foreign;
    GetOutputParameterDesc: (this: *ID3D11ShaderReflection, ParameterIndex: u32, pDesc: *D3D11_SIGNATURE_PARAMETER_DESC) -> HRESULT #foreign;
    GetPatchConstantParameterDesc: (this: *ID3D11ShaderReflection, ParameterIndex: u32, pDesc: *D3D11_SIGNATURE_PARAMETER_DESC) -> HRESULT #foreign;
    GetVariableByName: (this: *ID3D11ShaderReflection, Name: LPCSTR) -> *ID3D11ShaderReflectionVariable #foreign;
    GetResourceBindingDescByName: (this: *ID3D11ShaderReflection, Name: LPCSTR, pDesc: *D3D11_SHADER_INPUT_BIND_DESC) -> HRESULT #foreign;
    GetMovInstructionCount: (this: *ID3D11ShaderReflection) -> u32 #foreign;
    GetMovcInstructionCount: (this: *ID3D11ShaderReflection) -> u32 #foreign;
    GetConversionInstructionCount: (this: *ID3D11ShaderReflection) -> u32 #foreign;
    GetBitwiseInstructionCount: (this: *ID3D11ShaderReflection) -> u32 #foreign;
    GetGSInputPrimitive: (this: *ID3D11ShaderReflection) -> D3D11_PRIMITIVE #foreign;
    IsSampleFrequencyShader: (this: *ID3D11ShaderReflection) -> BOOL #foreign;
    GetNumInterfaceSlots: (this: *ID3D11ShaderReflection) -> u32 #foreign;
    GetMinFeatureLevel: (this: *ID3D11ShaderReflection, pLevel: *D3D_FEATURE_LEVEL) -> HRESULT #foreign;
    GetThreadGroupSize: (this: *ID3D11ShaderReflection, pSizeX: *u32, pSizeY: *u32, pSizeZ: *u32) -> u32 #foreign;
}

#scope_file

#import "d3d11";
#import "Windows";
